
# # Drawing on Images

import numpy as np
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
import cv2

blank_img = np.zeros(shape=(512,512,3),dtype=np.int16)
blank_img.shape
plt.imshow(blank_img)
# -----
# # Shapes
# ----

# ### Rectangles
# 
# * img Image.
# * pt1 Vertex of the rectangle.
# * pt2 Vertex of the rectangle opposite to pt1 .
# * color Rectangle color or brightness (grayscale image).
# * thickness Thickness of lines that make up the rectangle. Negative values, like #FILLED,mean that the function has to draw a filled rectangle.
# * lineType Type of the line. See #LineTypes
# * shift Number of fractional bits in the point coordinates.


# pt1 = top left
# pt2 = bottom right
cv2.rectangle(blank_img,pt1=(384,0),pt2=(510,128),color=(0,255,0),thickness=5)

# cv2.rectangle(blank_img,pt1=(384,0),pt2=(510,128),color=(0,255,0))
plt.imshow(blank_img)

# Let's practice by drawing a blue rectangle in the middle of the image.

# pt1 = top left
# pt2 = bottom right
cv2.rectangle(blank_img,pt1=(200,200),pt2=(300,300),color=(0,0,255),thickness=5)
plt.imshow(blank_img)

# ## Circles
cv2.circle(img=blank_img, center=(100,100), radius=50, color=(255,0,0), thickness=5)
plt.imshow(blank_img)

# ### Filled In
cv2.circle(img=blank_img, center=(400,400), radius=50, color=(255,0,0), thickness=-1)
plt.imshow(blank_img)

# ### Lines
# Draw a diagonal blue line with thickness of 5 px
cv2.line(blank_img,pt1=(0,0),pt2=(511,511),color=(102, 255, 255),thickness=5)
plt.imshow(blank_img)

# ### Text
font = cv2.FONT_HERSHEY_SIMPLEX
cv2.putText(blank_img,text='bornak',org=(10,500), fontFace=font,fontScale= 4,color=(255,255,255),thickness=2)
plt.imshow(blank_img)

# ### Polygons
# 
# To draw a polygon, first you need coordinates of vertices. Make those points into an array of shape ROWSx1x2 where ROWS are number of vertices and it should be of type int32. 
# 
blank_img = np.zeros(shape=(512,512,3),dtype=np.int32)
vertices = np.array([[100,300],[200,200],[400,300],[200,400]],np.int32)
pts = vertices.reshape((-1,1,2))
pts




cv2.polylines(blank_img,[pts],isClosed=True,color=(255,0,0),thickness=5)
plt.imshow(blank_img)


# Play around with this! Add shapes. 
